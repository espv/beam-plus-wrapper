/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins { id 'org.apache.beam.module' }
apply plugin: 'application'

repositories {
  mavenLocal()
}

description = "Apache Beam :: Runners :: Direct Java"

/*
 * We need to rely on manually specifying these evaluationDependsOn to ensure that
 * the following projects are evaluated before we evaluate this project. This is because
 * we are attempting to reference the "sourceSets.test.output" directly.
 */

dependencies {
  compile project(path: ":sdks:java:extensions:sql")
  compile project(path: ":sdks:java:io:kafka")
  compile project(path: ":runners:flink:1.10")
  compile 'no.uio.ifi:experimentframework:1.0'
  compile 'org.apache.flink:flink-java:1.10.1'
  compile 'org.apache.kafka:kafka-clients:1.0.2'
  compile 'org.yaml:snakeyaml:1.24'
  compile 'commons-cli:commons-cli:1.4'
  compile 'org.apache.commons:commons-text:1.8'
}

// Include dependent libraries in archive.
mainClassName = "no.uio.ifi.BeamExposeWrapper"

//create a single Jar with all dependencies
task fatJar(type: Jar) {
  manifest {
    attributes "Main-Class": mainClassName
  }
  zip64=true
  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  } with jar
  exclude 'META-INF/*.RSA'
  exclude 'META-INF/*.SF'
  exclude 'META-INF/*.DSA'
}
